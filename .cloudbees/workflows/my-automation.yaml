apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: My automation

on:
  push:
    branches:
      - '**'

jobs:
  Checkout:
    steps:
      - name: checkout
        uses: cloudbees-io/checkout@v1

  Build:
    needs: Checkout
    steps:
      - uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace

      - name: checkout
        uses: cloudbees-io/checkout@v1

      - name: Build 
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install -DskipTests=true


  SonarAnalysis:
    needs: Build
    steps:
      - uses: cloudbees-io/sonarqube-sast-scan-code@v1
        name: Scan
        kind: scan
        with:
          server-url: https://sonarqube.cb-demos.io
          username: admin
          password: admin123
          language: Java

      - uses: cloudbees-io/sonarqube-bundled-sast-scan-code@v2
        name: Scan 2
        kind: scan
        with:
          language: JAVA

      - uses: cloudbees-io/findsecbugs-sast-scan-code@v1
        name: Scan with Find Security Bugs
        kind: scan
        with:
          language: LANGUAGE_JAVA

      - uses: sbatchelder-cba/sonarqube-cba@v0.0.3
        name: Scan GP
        with:
          project-key: apigateway
          token: 20e414018be1508e8a472229e7ec07da1a13cfa1


  
  DeployEc2:
    needs: SonarAnalysis
    steps:
      - uses: docker://alpine/git:latest
        run: |
          git config --global --add safe.directory /cloudbees/workspace
          ls
      - name: checkout
        uses: cloudbees-io/checkout@v1
      - name: Build
        uses: docker://maven:3-eclipse-temurin-17
        run: |
          mvn clean install -DskipTests=true  
      - name: List built files
        uses: docker://alpine:latest
        run: |+
          ls -l /cloudbees/workspace/target
      
      - name: Deploy to EC2
        uses: docker://alpine:latest
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          SOURCE: "/cloudbees/workspace/target/spring-petclinic-api-gateway-3.2.4.jar"
          REMOTE_HOST: "44.204.64.78"
          REMOTE_USER: "ubuntu"
          TARGET: "/home/ubuntu/petclinic"
        run: |
          apk update
          apk add openssh-client
          echo "$SSH_PRIVATE_KEY" > /cloudbees/workspace/ssh-key.pem
          chmod 600 /cloudbees/workspace/ssh-key.pem
          scp -o StrictHostKeyChecking=no -i /cloudbees/workspace/ssh-key.pem "$SOURCE" "$REMOTE_USER"@"$REMOTE_HOST":"$TARGET"
          ssh -o StrictHostKeyChecking=no -i /cloudbees/workspace/ssh-key.pem "$REMOTE_USER"@"$REMOTE_HOST" "nohup java -jar /home/ubuntu/petclinic/spring-petclinic-api-gateway-3.2.4.jar > /home/ubuntu/petclinic/api-server.log 2>&1 &"
          ls -l /cloudbees/workspace/
          rm -rf /cloudbees/workspace/ssh-key.pem
          ls -l /cloudbees/workspace/

